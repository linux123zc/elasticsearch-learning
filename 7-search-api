Search API
1. URI Search
    在URL 中使用查询参数
2. Request Body Search
    使用Elasticsearch 提供的，基于JSON格式的更加完备的 Query Domain Specific Language (DSL)


URI 查询
使用 "q", 指定查询字符串
"query string syntax", kv 键值对

curl -xGET  "https://localhost:9200/kibana_sample_data_ecommerce/_search?q=customer_first_name:Eddie"

Request Body 支持 POST 和 GET
curl -xGET  "https://localhost:9200/kibana_sample_data_ecommerce/_search" -H 'Content-Type:application/json' -d'
{
    "query": {
        "match_all": {}
    }
}'

搜索 Response
took: 花费的时间
total: 符合条件的总文档数
hits: 结果集，默认前十个文档
_index: 索引名
_id: 文档的id
_score: 相关度评分
_source: 文档的原始信息


# URI Query
GET kibana_sample_data_ecommerce/_search?q=customer_first_name:Eddie

GET kibana*/_search?q=customer_first_name:Eddie

GET /movies/_search?q=2012&df=title&sort=year:desc&from=0&size=10&timeout=1s
{
  "profile": "true"
}

# REQUEST Body
POST kibana_sample_data_ecommerce/_search
{
	"profile": true,
	"query": {
		"match_all": {}
	}
}

#基本查询
GET /movies/_search?q=2012&df=title&sort=year:desc&from=0&size=10&timeout=1s

#带profile
GET /movies/_search?q=2012&df=title
{
	"profile":"true"
}


#泛查询，正对_all,所有字段
GET /movies/_search?q=2012
{
	"profile":"true"
}

#指定字段
GET /movies/_search?q=title:2012&sort=year:desc&from=0&size=10&timeout=1s
{
	"profile":"true"
}


# 查找美丽心灵, Mind为泛查询
GET /movies/_search?q=title:Beautiful Mind
{
	"profile":"true"
}

# 泛查询
GET /movies/_search?q=title:2012
{
	"profile":"true"
}

#使用引号，Phrase查询
GET /movies/_search?q=title:"Beautiful Mind"
{
	"profile":"true"
}

#分组，Bool查询
GET /movies/_search?q=title:(Beautiful Mind)
{
	"profile":"true"
}


#布尔操作符
# 查找美丽心灵
GET /movies/_search?q=title:(Beautiful AND Mind)
{
	"profile":"true"
}

# 查找美丽心灵
GET /movies/_search?q=title:(Beautiful NOT Mind)
{
	"profile":"true"
}

# 查找美丽心灵
GET /movies/_search?q=title:(Beautiful %2BMind)
{
	"profile":"true"
}


#范围查询 ,区间写法
GET /movies/_search?q=title:beautiful AND year:[2002 TO 2018%7D
{
	"profile":"true"
}


#通配符查询
GET /movies/_search?q=title:b*
{
	"profile":"true"
}

//模糊匹配&近似度匹配
GET /movies/_search?q=title:beautifl~1
{
	"profile":"true"
}

GET /movies/_search?q=title:"Lord Rings"~2
{
	"profile":"true"
}